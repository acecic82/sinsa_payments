version: '3'
services:
  # 서비스 명
  database:
    # 사용할 이미지
    image: mysql:8.3.0
    # 컨테이너명 설정
    container_name: mysql_payments
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    ports:
      - "3308:3307"
    # 네트워크 설정
    networks:
      - point-network
    # 환경 변수 설정
    environment:
      MYSQL_DATABASE: mysql_write_point
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      TZ: 'Asia/Seoul'
    # 명렬어 설정
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"

  redis: # container name
    container_name: redis_point
    image: redis:latest
    ports: # 바인딩할 포트:내부 포트
      - "6380:6379"
    command:
      - "redis-server"
#    volumes: # 마운트할 볼륨 설정
#      - ${REDIS_DATA_PATH}:/data
#      - ${REDIS_DEFAULT_CONFIG_FILE}:/usr/local/etc/redis/redis.conf
    networks:
      - point-network
    restart: always

  app:
    container_name: point-server
    restart: on-failure
    environment:
      SPRING_DATASOURCE_JDBC_URL: jdbc:mysql://mysql_payments:3306/mysql_write_point
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      REDIS_PORT: 6379
      REDIS_HOST: redis
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - point-network
    depends_on:
      - database
      - redis

networks:
  point-network:
    driver: bridge